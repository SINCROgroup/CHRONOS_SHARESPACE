package Administrator.Algorithm;

// TODO: Auto-generated Javadoc
/**
 * @version 
 * <ul>
 * <li> 1.0: March 6, 2016 created by Maria Lombardi </li>
 * </ul>
 * <hr>
 * @author Maria Lombardi
 * <p>
 * <br>
 * The Class HKB.
 * <p>
 * This class implements the HKB oscillator as a virtual player's
 * inner dynamics.
 * The HKB oscillator is a system of equations. The first equation
 * x punto = y is a function that implements a banal equivalence and so
 * it isn't written. The second equation is the real mathematical law of the
 * HKB oscillator.
 * <br>
 */
public class HKB {

	/** The settings. */
	private Settings settings;
	
	/**
	 * Instantiates a new HKB oscillator.
	 */
	public HKB(){
		this.settings = Settings.getSettings();
	}
	
//	public float HKBDynamicFirst(float y){
//		return y;
//	}
	
	/**
	 * Mathematical law of HKB oscillator.
	 *
	 * @param x  current virtual player's position
	 * @param y  current virtual player's velocity
	 * @param u  control signal generated by the controller
	 * @return the virtual player's accelerator. This value of acceleration
	 * will be used to evaluated the next value of virtual player's velocity
	 * and so its position (nextVel = currentVel + accel*time; nextPos = 
	 * currentPos + vel*time).
	 */

	public float HKBDynamicSecond(int index, float x, float y, float u){
		
		return (float) (-(settings.getAlpha(index)*Math.pow(x, 2) + settings.getBeta(index)*Math.pow(y, 2) - 
				settings.getGamma(index))*y - Math.pow(settings.getOmega(index), 2)*x + u);
	}

}
